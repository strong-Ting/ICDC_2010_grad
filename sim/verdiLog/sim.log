Command: /home/DICS_LAB/M10912039/CIC/CIC_2010_grad/sim/simv -ucli +define+tb1 +define+FSDB +notimingchecks -sml=verdi +UVM_VERDI_TRACE=UVM_AWARE +fsdb+gate=off -ucli2Proc -l /home/DICS_LAB/M10912039/CIC/CIC_2010_grad/sim/verdiLog/sim.log
Notice: timing checks disabled with +notimingcheck at compile-time
Chronologic VCS simulator copyright 1991-2018
Contains Synopsys proprietary information.
Compiler version O-2018.09; Runtime version O-2018.09;  Jan 31 19:13 2021

ucli% synUtils::getArch
linux
ucli% loaddl -simv /usr/cad/synopsys/verdi/cur//share/PLI/VCS/LINUX/libnovas.so LoadFSDBDumpCmd;LoadFSDBDumpCmd
LoadFSDBDumpCmd success
ucli% config ckptfsdbcheck off;config endofsim noexit;config onfail {enable all};config followactivescope on;catch {setUcliVerdiConnected};cbug::config pretty_print auto;fsdbDumpfile {/home/DICS_LAB/M10912039/CIC/CIC_2010_grad/sim/inter.fsdb}; fsdbDumpflush;
*Verdi* Loading libsscore_vcs201809.so
FSDB Dumper for VCS, Release Verdi_O-2018.09, Linux, 08/30/2018
(C) 1996 - 2018 by Synopsys, Inc.
*Verdi* : Create FSDB file '/home/DICS_LAB/M10912039/CIC/CIC_2010_grad/sim/inter.fsdb'
*Verdi* : Flush all FSDB Files at 0 ps.

ucli% sps_interactive
*Verdi* : Enable RPC Server(30125)

ucli% ucliCore::getToolPID
30125
ucli% ucliCore::getToolPID
30125
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% puts $ucliCore::nativeUcliMode
0

ucli% ucliCore::getToolTopPID
30125
ucli% pid
30138
ucli% synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.M10912039.30125 }

ucli% if { [info vars watch::vcbp_str_len_limit_of_get_value] != ""} {set watch::vcbp_str_len_limit_of_get_value 1024}
1024
ucli% info command stateVerdiChangeCB

ucli% proc stateVerdiChangeCB args { if {$ucliGUI::state eq "terminated"} {puts "\nVERDI_SIM_Terminated\n";catch {setVerdiSimTerminated}}}

ucli% trace variable ucliGUI::state wu stateVerdiChangeCB

ucli% if {[catch {rename synopsys::restore verdiHack::restore} ]} {puts "0"}

ucli% proc synopsys::restore {args} { verdiHack::restore $args; puts "\nVERDI_SIM_RESTORE\n"}

ucli% if {[catch {rename quit verdiHack::quit} ]} {puts "0"}

ucli% proc quit {args} { if {[string length $args] == 0} { verdiHack::quit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n quit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::quit $args; } }

ucli% if {[catch {rename exit verdiHack::exit} ]} {puts "0"}

ucli% proc exit {args} { if {[string length $args] == 0} { verdiHack::exit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n exit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::exit $args; } }

ucli% proc checkpoint::beforeRecreate {} { sps_interactive }

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% save::getUserdefinedProcs
::stateVerdiChangeCB ::LoadFSDBDumpCmd
ucli% info procs
ipi_get_str fsdbDumpMDAByFile fsdbDumpMDA echo fsdbDumpMemNow fsdbAutoSwitchDumpfile unknown sps_interactive auto_import stat fsdbDumpfile setenv auto_execok pkg_mkIndex stateVerdiChangeCB fsdbDumpSingle proc_body ipi_begin fsdbDumpoff getenv fsdbDumplimit fsdbDumpPattern ipi_handle fsdbDumpvarsByFile fsdbDumpMDAInScope lminus ipi_sim_get interp ls auto_load_index proc_args fsdbAddRuntimeSignal fsdbDumpSC print_message_info ridbDump fsdbDumpSVAoff fsdbSuppress fsdbDumpvars help fsdbDumpMDAOnChange ipi_control auto_qualify fsdbDumpMem tclPkgUnknown printenv ipi_handle_by_name helpdoc fsdbDumpMemInScope fsdbDumpFinish is_true fsdbDumpon sh fsdbQueryInfo puts LoadFSDBDumpCmd fsdbDumpPSL fsdbDumpSVA ipi_end wrapperSpecmanSn fsdbDumpSVAon fsdbDumpClassObjectByFile is_false auto_load fsdbDumpPSLon ipi_get_int64 fsdbSubstituteHier ipi_get_value ipi_iterate exit fsdbDumpMemInFile tclLog fsdbDumpflush get_unix_variable mem_debug ipi_scan fsdbDumpPSLoff fsdbDumpClassObject fsdbDumpvarsToFile set_unix_variable bgerror fsdbDumpStrength clock add_group fsdbSwitchDumpfile source add_wave unsetenv fsdbDumpvarsES readline fsdbDisplay ipi_handle_free set_group ipi_get quit define_proc_attributes tclPkgSetup fsdbDumpMDANow ipi_init_play_tcl fsdbDumpIO
ucli% lappend ucliCore::resultTagsForVerdi <?special_verdi_begin?> <?special_verdi_end?>
<?special_verdi_begin?> <?special_verdi_end?>
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% fsdbDumpvars 0 "testfixture.s1.clk"  +all +trace_process;fsdbDumpvars 0 "testfixture.s1.rst"  +all +trace_process;fsdbDumpvars 0 "testfixture.s1.updown"  +all +trace_process;fsdbDumpvars 0 "testfixture.s1.cs"  +all +trace_process;fsdbDumpvars 0 "testfixture.s1.ns"  +all +trace_process;fsdbDumpvars 0 "testfixture.s1.RB1_A"  +all +trace_process;fsdbDumpvars 0 "testfixture.s1.RB1_Q"  +all +trace_process;fsdbDumpvars 0 "testfixture.s1.RB1_buffer"  +all +trace_process
*Verdi* : Dumping the signal (testfixture.s1.clk).
*Verdi* : Dumping the signal (testfixture.s1.rst).
*Verdi* : Dumping the signal (testfixture.s1.updown).
*Verdi* : Dumping the signal (testfixture.s1.cs).
*Verdi* : Dumping the signal (testfixture.s1.ns).
*Verdi* : Dumping the signal (testfixture.s1.RB1_A).
*Verdi* : Dumping the signal (testfixture.s1.RB1_Q).
*Verdi* : Dumping the signal (testfixture.s1.RB1_buffer).

ucli% fsdbDumpflush 
*Verdi* : Flush all FSDB Files at 0 ps.

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% fsdbDumpflush 
*Verdi* : Flush all FSDB Files at 0 ps.

ucli% senv
activeDomain: Verilog
activeFile: 
activeFrame: 
activeLine: 0
activeScope: testfixture
activeThread: 
endCol: 0
file: 
frame: 
fsdbFilename: 
hasTB: 0
inputFilename: 
keyFilename: ucli.key
line: 0
logFilename: /home/DICS_LAB/M10912039/CIC/CIC_2010_grad/sim/verdiLog/sim.log
macroIndex: -1
macroOffset: -1
pid: 30125
scope: testfixture
startCol: 0
state: stopped
thread: 
time: 0
timePrecision: 1 ps
vcdFilename: 
vpdFilename:
ucli% puts $::ucliCore::cbug_active
0

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% checkpoint -list -all
There are no checkpoints present.
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% stop
No stop points are set
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% run
*Verdi* : Begin traversing the scopes, layer (0).
*Verdi* : End of traversing.
*Verdi* : Begin traversing the scopes, layer (0).
*Verdi* : End of traversing.
*Verdi* : Begin traversing the MDAs, layer (0).
*Verdi* : Enable +mda and +packedmda dumping.
*Verdi* : End of traversing the MDAs.
$finish called from file "testfixture.v", line 328.
$finish at simulation time             20000000
Simulation complete, time is 20000000 ps.

ucli% synEnv::hasFataled
0
ucli% ucliCore::getToolPID
30125
ucli% save::getUserdefinedProcs
::stateVerdiChangeCB ::LoadFSDBDumpCmd
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% fsdbDumpflush 
*Verdi* : Flush all FSDB Files at 20,000,000 ps.

ucli% senv
activeDomain: Verilog
activeFile: 
activeFrame: 
activeLine: 0
activeScope: testfixture
activeThread: 
endCol: 0
file: 
frame: 
fsdbFilename: 
hasTB: 0
inputFilename: 
keyFilename: ucli.key
line: 0
logFilename: /home/DICS_LAB/M10912039/CIC/CIC_2010_grad/sim/verdiLog/sim.log
macroIndex: -1
macroOffset: -1
pid: 30125
scope: testfixture
startCol: 0
state: stopped
thread: 
time: 20000000
timePrecision: 1 ps
vcdFilename: 
vpdFilename:
ucli% puts $::ucliCore::cbug_active
0

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% checkpoint -list -all
There are no checkpoints present.
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% stop
No stop points are set
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% 